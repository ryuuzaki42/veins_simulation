[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 5s # Default value
#cmdenv-output-file = fileOut.r

# Experiments variables
#warmup-period = 20s
repeat = 10
num-rngs = 1
seed-set = ${repetition}

# Tkenv config
tkenv-default-config = nodebug # debug
#tkenv-default-run = 0

ned-path = ../1node/
#network = vehDist_rsu # Ned file with 1 RSU
network = vehDist_rsu3 # Ned file with 3 RSU

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = false

sim-time-limit = 630s

# record-eventlog = true # true to generate a .log file
**.scalar-recording = false #false
**.vector-recording = false #false
record-eventlog = false #false

**.debug = false
**.coreDebug = false

#*.playgroundSizeX = 3100m #1100m
#*.playgroundSizeY = 3100m #1100m
*.playgroundSizeZ = 50m

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false
#*.obstacles.obstacles = xmldoc("../1node/config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.moduleType = "org.car2x.veins.nodes.Car"
*.manager.moduleName = "car"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

###########################################################################################################
*.*.appl.getTraffic = false #false true ## Disable the beacon to go more faster
*.*.appl.trafficGranularitySum = 30s
*.manager.seed = ${repetition}

## Epidemic not use
*.*.appl.getBusPosition = false #false true ## Disable the beacon to go more faster
*.*.appl.useBusPosition = true #false true # Use or not edge position
#
*.*.appl.firstCategory = "P"
*.*.appl.secondCategory = "B"
##

*.manager.penetrationRate = 1 ## Rate of vehicle with NIC communication module
*.*.appl.disableCout = true #false true # Print message with cout or not

###################### 0scenarios/grid_3km/
#*.manager.launchConfig = xmldoc("../0scenarios/grid_3km/vehDist.launchd.xml")
#
### boundary  : 0.00,0.00,3000.00,3000.00
#*.playgroundSizeX = 3100m
#*.playgroundSizeY = 3100m
#
## rsu[0] - sumo(1500, 1500)
#*.rsu[0].mobility.x = 1520 # Target of the message generated
#*.rsu[0].mobility.y = 1520
###################### bologna_small/joined/
*.manager.launchConfig = xmldoc("../0scenarios/bologna_small/joined/joined.launchd.xml")

## Boundary  : 0.00,0.00,2164.41,1916.16
*.playgroundSizeX = 2200m
*.playgroundSizeY = 2200m

## RSU
#*.rsu[0].mobility.x = 1150 # Target of the message generated
#*.rsu[0].mobility.y = 1110

## Targets of the message generated
# rsu[0] - sumo(990, 995)
*.rsu[0].mobility.x = 990
*.rsu[0].mobility.y = 921

## rsu[1] - sumo(685, 1590)
*.rsu[1].mobility.x = 685
*.rsu[1].mobility.y = 326

## rsu[2] - sumo(1500, 630)
*.rsu[2].mobility.x = 1500
*.rsu[2].mobility.y = 1286

## veins_point_OMNetpp.sh -f file.net.xml -x 1150 -y 805
## x = xw = 1150
## y = yf -yw = 1916.16 - 805 = 1111,16
##########################################################
#                    VehDist Config                      #
##########################################################

############################# General
#*.manager.numVehicles = 52 # Veins will be responsible for holding this number of vehicle in the scenario # Depart in seconds is 1.2
#*.manager.vehicleRngIndex = ${repetition} # Index of the RNG stream to be used, all random numbers concerning the managed vehicles

##################################################################
#*.*.appl.expSendbyDSCR = ${expSendbyDSCR=1, 12, 13, 14, 123, 1234}
#*.*.appl.expSendbyDSCR = 99

*.*.appl.expSendbyDSCR = ${expSendbyDSCR=1, 13}

# 1 chosenByDistance()
# 12 chosenByDistance_Speed()
# 13 chosenByDistance_Category()
# 14 chosenByDistance_RateTimeToSend()
# 123 chosenByDistance_Speed_Category()
# 1234 chosenByDistance_Speed_Category_RateTimeToSend()
# 99 epidemic

*.*.appl.expPart_one_or_two = 1
# 1 to user e.g. 10s and 30s on ttlBeaconMessage or 2 to user e.g. 60s and 90s
# set this value in ttlBeaconMessage_(one, two) an change the expPart_one_or_two value

#*.*.appl.expNumber = ${experimentNumber=1..8 step 1} # 1 to 8
#*.*.appl.expNumber = ${experimentNumber=1, 3, 5, 7}
#*.*.appl.expNumber = ${experimentNumber=1, 2, 3, 4}

*.*.appl.expNumber = ${experimentNumber=1}

*.*.appl.timeGenerateNewMessage = 5s # 5s 15s #30s
*.*.appl.timeStartGenerateMessage = 30s #30s

*.*.appl.vehTimeLimitToAcceptGenerateMgs = 100s
*.*.appl.allowMessageCopy = true #true false
*.*.appl.selectFromAllVehicles = true #true false
*.*.appl.vehDistCreateEventGenerateMessage = true #true false

*.*.appl.beaconTypeInitialize = 1 # 1 for vehDist, 2 for epidemic, 3 for minicurso_UFPI_TraCI, 0 for the default

## Epidemic not use
*.*.appl.percentP = 20 #20
*.*.appl.usePathHistory = false #true false // If usePathHistory is false will send for the vehicle closest
                                           #// If true will test if vehicle is going to the target
*.*.appl.useMessagesSendLog = false #true false
*.*.appl.useRateTimeToSend = false #true false
*.*.appl.normalTimeSendMessage = 5s #0.1s, 1s, 5s
*.*.appl.vehTimeUpdatePosition = 5s
##

*.*.appl.ttlMessage_one = 3660s # Must be ttlMessage_one < ttlMessage_two
*.*.appl.ttlMessage_two = 36120s

*.*.appl.timeLimitGenerateMessage = 450s #450s

*.*.appl.countGenerateMessage_one = 20 # Must be countGenerateMessage_one < countGenerateMessage_two
*.*.appl.countGenerateMessage_two = 10 # Must be small the number of veh per second in the scneario

# Exp 1 or 5 # (_one, _one) [ttlMessage_one, countGenerateMessage_one]
# Exp 2 or 6 # (_one, _two) [ttlMessage_one, countGenerateMessage_two]
# Exp 3 or 7 # (_two, _one) [ttlMessage_two, countGenerateMessage_one]
# Exp 4 or 8 # (_two, _two) [ttlMessage_two, countGenerateMessage_two]
#######################################################################################################################

############################# BeaconStatus / BeaconMessage
## veh speed 25 m/s or 90 km/h  # 25*5 = 125 m
## veh speed 25 m/s  # 25*5 = 125 m, So 2 * speed to move range of TxPower

## VehDist
*.*.appl.ttlBeaconStatus = 3s # 3 seconds of vehicle inside the range
*.*.appl.beaconStatusBufferSize = 50
*.*.appl.useBeaconStatusBufferSize = false

## Epidemic
#*.*.appl.sendSummaryVectorInterval = 7s # Define the minimum slide window length among contacts to send new version of summary vector

## Bolth
*.*.appl.messageHopLimit = 10 # Define the maximum number of hopes that a message can be forward before reach the target
*.*.appl.messageBufferSize = 50 # Define the maximum buffer size (in number of messages) that a node is willing to allocate for epidemic messages

############### street speed limit 85 * 3.6= = 306 km/h

##############
# km/h = m/s #
#  18  =   5 #
#  36  =  10 #
#  54  =  15 #
#  72  =  20 #
#  90  =  25 #
# 108  =  30 #
# 126  =  35 #
# 144  =  40 #
# 162  =  40 #
# 180  =  50 #
# 198  =  55 #
# 216  =  60 #
# 234  =  65 #
# 252  =  70 #
# 270  =  75 #
# 288  =  80 #
# 306  =  85 #
##############

#  60 km/h ~ 16.67 m/s
# 120 km/h ~ 33.34 m/s
#
# 15 m/s = 54 m/s
# 25 m/s = 90 m/s
##########################################################
#                       RSU SETTINGS                     #
##########################################################
*.rsu[*].mobility.z = 3

*.rsu[*].applType = "vehDist_rsu"
*.rsu[*].appl.debug = false
*.rsu[*].appl.headerLength = 256 bit
*.rsu[*].appl.sendBeacons = true #true false
*.rsu[*].appl.dataOnSch = false
*.rsu[*].appl.sendData = false
*.rsu[*].appl.beaconInterval = 1s
*.rsu[*].appl.beaconPriority = 3
*.rsu[*].appl.dataPriority = 2
*.rsu[*].appl.maxOffset = 0.005s

##########################################################
#            11p specific parameters                     #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.pMax = 5mW #20mW
*.connectionManager.sat = -89dBm
*.connectionManager.alpha = 2.0
*.connectionManager.carrierFrequency = 5.890e9 Hz
*.connectionManager.sendDirect = true

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 5mW #20mW
*.**.nic.mac1609_4.bitrate = 18Mbps

*.**.nic.phy80211p.sensitivity = -89dBm
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -110dBm
*.**.nic.phy80211p.decider = xmldoc("../1node/config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("../1node/config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                    WaveAppLayer                        #
##########################################################
*.car[*].applType = "vehDist"
*.car[*].appl.debug = false
*.car[*].appl.headerLength = 256 bit
*.car[*].appl.sendBeacons = true #true false
*.car[*].appl.dataOnSch = false #The channel type which will be used in the transmission, if control (type_CCH) or service (type_SCH). false value means type_CCH channel
*.car[*].appl.sendData = true
*.car[*].appl.beaconInterval = 1s
*.car[*].appl.beaconPriority = 3
*.car[*].appl.dataPriority = 2
*.car[*].appl.maxOffset = 0.005s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].veinsmobilityType = "org.car2x.veins.modules.mobility.traci.TraCIMobility"
*.car[*].mobilityType = "TraCIMobility"
*.car[*].mobilityType.debug = true
*.car[*].veinsmobilityType.debug = true
*.car[*].veinsmobility.x = 0
*.car[*].veinsmobility.y = 0
*.car[*].veinsmobility.z = 1.895
*.car[*].veinsmobility.accidentCount = 0
*.car[*].veinsmobility.accidentStart = 25s
*.car[*].veinsmobility.accidentDuration = 20s

[Config nodebug]
description = "default settings"
**.debug = false
**.coreDebug = false
*.annotations.draw = false

[Config debug]
description = "(very slow!) draw and print additional debug information"
**.debug = true
**.coreDebug = true
*.annotations.draw = true
